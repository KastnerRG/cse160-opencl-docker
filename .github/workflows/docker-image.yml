name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        docker: 
          - {image: ubuntu, image_tag: 24.04, push_tag: cpu, platforms: 'linux/amd64,linux/arm64', runs-on: ubuntu-24.04}
          - {image: ghcr.io/kastnerrg/qualcomm-docker-base, image_tag: latest, push_tag: qcomm, platforms: linux/arm64, runs-on: ubuntu-24.04-arm}
          - {image: nvidia/cuda, image_tag: 12.6.3-cudnn-devel-ubuntu24.04, push_tag: cuda, platforms: linux/amd64, runs-on: ubuntu-24.04}
    

    runs-on: ${{ matrix.docker.runs-on }}
    
    steps:
    - name: Docker/ENV cleanup Cleanup
      run: |
        docker image prune -a -f
        docker container prune -f
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - 
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Generate Dockerfile
      run: |
        python -m opencl_docker --image ${{ matrix.docker.image }}:${{ matrix.docker.image_tag }} --output Dockerfile
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        tags: ghcr.io/kastnerrg/cse160-opencl:${{ matrix.docker.push_tag }}
        platforms: ${{ matrix.docker.platforms }}
        push: true
